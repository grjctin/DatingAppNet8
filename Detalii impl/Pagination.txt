Trimitem catre client detaliile despre paginare in header-ul response-ului adaugand un pagination header.
Pentru a adauga pagination header-ul la response, creem o metoda de extensie.
Pentru ca suntem in controller, avem acces la response. Metoda de extensie va extinde HttpResponse si o vom putea apela direct din controller.

Fiind vorba despre o metoda de extensie care nu e in controller, trebuie sa specificam ca vrem sa transforme in camelCase pentru a returna ca json.(in controller se face automat)

Pentru ca clientul sa aiba acces la header-ul de pagination, trebuie sa mai adaugam un header care sa permita asta ("Access-Control-Expose-Headers")

De la client primim userParams prin queryString. Daca in endpoint-ul din controller ca parametru avem un obiect, dotnet il va cauta in body-ul request-ului, trebuie sa ii specificam ca obiectul va veni prin queryString folosind [FromQuery].



